`Part 1 개발자로 산다는 것`,
`Story 1 내가 소프트웨어 개발자가 된 이유는?`,
`20대에 도전하라`,
`성공한 사람들의 과대평가`,
`우연한 선택`,
`단순한 꿈은 이루어지지 않는다`,
`꿈은 좀 더 명확한 목표가 있어야 한다`,
`계속 준비해야 이룰 수 있는 꿈이 된다`,
`부족한 것은 다른 것으로 채우면 된다`,
`꿈이 바뀌는 것을 두려워하지 말자`,
`20대의 기억은 '책'이 될 수 있다`,
`그냥, 그렇게 지나가더라`,
`학교에서 배우는 것과 실제는 다르다`,
`Story 2 취미가 본업이 된다는 것`,
`소프트웨어 개발자, 그리고 아키텍트`,
`취미와 본업의 차이?`,
`소프트웨어 개발은 대부분 재미없다`,
`재미있는 소프트웨어 개발을 찾아라`,
`개발자는 게으르다. 더 게을러져라.`,
`도구를 만들기보다 문화를 만든다`,
`스닉 프리뷰(sneak preview)`,
`개발자는 '잉여' 관리가 필수이다`,
`Story 3 대한민국 소프트웨어 개발자에게 성공이란`,
`성공이란 무엇일까?`,
`성공한 서비스들은 대부분 아류작이다?`,
`성공한 개발자, 성공한 벤처 사업가들`,
`대한민국에서 '성공'이란 '돈'을 의미하는가?`,
`성공보다 정말로 하고 싶은 것에 대해 고민하자`,
`Story 4 소프트웨어 개발자가 된다는 것`,
`가치(Value)`,
`성공(Success)`,
`개발자는 언제나 고민해야 한다.`,
`5%뿐인 성공적인 소프트웨어 개발`,
`착각은 금물, 겸손이란 미덕`,
`아마추어가 아니라 프로가 되자`,
`객체지향이라는 개념이 필요한가?`,
`프로그래밍은 독학할 수 있는가?`,
`소프트웨어 품질과 비용의 비례 관계`,
`유명한 개발자가 되는 11가지 방법`,
`Part 2 개발환경의 변화와 진화`,
`Story 1 중소기업 그리고 소프트웨어`,
`소프트웨어 기업의 조건`,
`대한민국에서 IT란`,
`인터넷의 시대에 빛을 발한 IT`,
`소프트웨어 산업의 현실`,
`중소 소프트웨어 업체로 성공하려면?`,
`Story 2 소프트웨어 공학은 현실에서 왜 사용되지 않는가?`,
`현실과 이론의 차이`,
`최근에 '서울행복직업박람회'에서 받은 질문`,
`소프트웨어 품질이 정말 필요한 곳인가?`,
`Story 3 소프트웨어 개발자의 직장생활`,
`40대 개발자`,
`첫 직장을 선택할 때에 고려할 것.`,
`한국식 기업문화와 소프트웨어 문화`,
`필자가 꿈꾸었던 대한민국 몇 가지 기업 문화`,
`대기업 생활 경험이 필요하다?`,
`계약서는 정말 잘 작성해야 한다`,
`신입 때 중요한 스펙이 진정 뭐라고 생각하나?`,
`신입 개발자의 처세에 대한 조언`,
`프로젝트 매니저란?`,
`권고사직에 대처하는 자세`,
`IT 발전과 일자리에 대해서 고민하라`,
`지속 가능한 개발자`,
`글로벌 소프트웨어 개발자`,
`Story 4 개발자`,
`JAVA만 있는 것은 아니다`,
`소프트웨어 개발에서 경험과 지식이 모두 중요한 이유`,
`초심을 잃지 말자.`,
`치킨집이 미래인가?`,
`현재 최고의 개발자는`,
`소프트웨어 개발자의 이력서 작성법`,
`Part 3 개발, 20년의 갈등`,
`Story1 소프트웨어 하우스를 만들고 벤처를 시작한 이야기`,
`Founder`,
`내 미친 짓의 시작`,
`똑똑한 사람들이 모이면 무언가 될 줄 알았다.`,
`정말 '겸손'이라는 단어가 가능했던 분`,
`사업의 성공은 '기술'이 아니다`,
`대한민국에서 정부가 제공하는 '돈'이란?`,
`투자성공 이후도 생각하라`,
`가치 혼동을 느끼면 실패한다`,
`Founder의 목적성`,
`실패 사례를 수집하라`,
`동료를 잊지 마라`,
`1만 시간의 법칙`,
`거절당하는 것을 두려워하지 마라`,
`정말, 사업을 고민하는가?`,
`사업계획서`,
`투자에 대한 이야기`,
`미래의 사업가는 생태계를 인지해야 한다.`,
`사업과 전쟁터를 구분하자`,
`즐겁지 않은 일은 이제 실패한다.`,
`Story 2 이직을 꿈꾸다`,
`대기업으로 이직을 고민하는가?`,
`직장생활은 인간적이지 않다`,
`잘 만든 자기소개서 작성하기`,
`Story 3 소프트웨어 개발자 이직하다.`,
`이직을 고민하는가?`,
`안 좋은 회사를 피하는 방법`,
`이직하기 좋은 회사`,
`이직을 권유받았는가? 이직을 꿈꾸는가?`,
`당장 이직을 고민해야 하는 회사`,
`Story 4 40대를 넘은 개발자는 이런 생활을 한다`,
`40대 개발자가 새로운 도전을 한다는 것`,
`사회에 봉사하는 재능기부를 통해서 얻는 기쁨`,
`전문가적인 활동을 하자`,
`칼럼과 글은 쓰는 사람을 풍요롭게 한다.`,
`새로운 분야를 계속 도전하라.`,
`초보자에 대한 배려를 갖자`,
`누군가를 돕고 싶다면, 멘토는 이렇게 해야 한다`,
`40대에 창업하려면 중요한 포인트`,
`내 인맥은 나에게 활용하라.`,
`소프트웨어 복잡도에 이제는 신경 써야지?`,
`리더가 되는 법을 고민하자`,
`Story 5 기본이 가장 어렵다`,
`기본`,
`나사못 하나 때문에`,
`책임지는 자리에서는 '눈'으로 모든 것을 확인해야 한다.`,
`요구사항의 처리는 어디까지 해야 하는가?`,
`내가 만들 기업의 문화를 상상하라`,
`언제나 새로운 언어를 찾아라`,
`Part 4 혁신을 부르는 개발`,
`Story 1 소프트웨어 개발 하지 마라`,
`소프트웨어 개발과 방법론`,
`소프트웨어 개발과 잉여`,
`소프트웨어 품질에 대한 이야기`,
`Story 2 소프트웨어의 품질에 대한 책임`,
`성공적인 소프트웨어 개발`,
`품질을 높이기 위한 노력`,
`Story 3 DevOps와 SW Visualization 실현`,
`DevOps는 새로운 개념인가?`,
`Story 4 개발업무의 우선순위를 결정하는 방법`,
`우선순위를 결정하는 방법`,
`공개소프트웨어와 상용소프트웨어 선택의 기준`,
`Story 5 소프트웨어 아키텍트를 뛰어넘어 데이터사이언티스트를 꿈꾸다.`,
`데이터사이언티스트란?`,
`데이터사이언티스트와 IoT`,
`Story 6 코드리뷰는 참 어렵다`,
`개발자들에게 코드리뷰가 어려운 이유`,
`Story 7소프트웨어 개발의 기본`,
`OOP5대 원칙`,
`좋은 설계란 무엇인가?`,
`나쁜 설계란 무엇인가?`,
`쉽고 잘 만든 코드란?`,
`프레임워크와 컨테이너들에 대한 개념들`,
`프로그래밍은 구조가 더 중요하다.`,
`현재와 미래를 관통하는 코드 개발`,
`Refactoring의 기본 5가지`,
`Part 5 에필로그`,
`Story 1 미래에 소프트웨어 개발자를 꿈꾸는 학생들이게`,
`소프트웨어 개발자가 알아야 하는 몇 가지 이야기`,
`잉여개발과 독립개발을 꿈꾸는 사람들`,
`소프트웨어 개발만 하고 싶어요 학교 공부는 좀 적게 할 방법이 없나요?`,
`소프트웨어 개발자를 꿈꾸는 아이들의 부모님들에게`,
`제대로 된 소프트웨어 개발자가 되려면 무엇을 공부해야 하는가?`,
`개발자! 소프트웨어 개발자!`,
`‘인재를 구할 때 사용하는말’로 끝맺음을 하겠다`,
`Story 2 어린 개발자들이여 더 멋진꿈을 가져라`,
`어린 개발자들과의 만남과 인연`,
`너무도 작은 꿈, 당장의 돈벌이?`,
`BtoB가 아니라 BtoC로 바뀌었다 하지만, 모바일앱이 전부는 아니다`,
`어린 개발자들이여 꿈을 가져라!`,
`소셜 게임을 디자인했지만, 결국 평범한 MMORPG를 만들었다`,
`어린 개발자들이여 고집’을 가져라!`,
`테크 모델 철도 클럽(TMRC)`,
`로봇에 들어갈 OS를 디자인하고 있을 멋진 후배를 생각해본다`,
`어린 개발자와 메일을 주고 받은 사연`